# -*- mode: CMAKE; -*-

project(arangodbcpp)

# velocypack

find_library(velocypackLib
  NAMES velocypack
  PATHS "${CMAKE_INSTALL_PREFIX}/lib"
)

if (NOT velocypackLib)
  message(FATAL_ERROR "velocypack library not installed")
endif ()

# curl

find_library(curlLib
  NAMES curl
  PATHS "${CMAKE_INSTALL_PREFIX}/lib"
)

if (NOT curlLib)
  message(FATAL_ERROR "curl library not installed")
endif ()

include("../Settings.CMake")

  set(arangodbcppLib arangodbcpp)

  include_directories(
    ${LIBCURLPP_INCLUDE_DIR}
    ${CMAKE_SOURCE_DIR}/3rdParty/googletest/googletest/include
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_INSTALL_PREFIX}/include
  )

  set(PROJECT_VERSION_MAJOR 0)
  set(PROJECT_VERSION_MINOR 1)
  set(PROJECT_VERSION_PATCH 0)

  set(HeaderFile "${CMAKE_CURRENT_SOURCE_DIR}/include")
  set(HeaderFile "${HeaderFile}/arangodbcpp/fuerte_version.h")
  set(TmpFile "${CMAKE_CURRENT_SOURCE_DIR}/tmp")
  file(WRITE "${TmpFile}"
    "// Do not edit, file generated by CMake\n\n"
    "#ifndef FUERTE_FUERTE_VERSION_H\n"
    "#define FUERTE_FUERTE_VERSION_H\n\n"
    "#define VERSION_STRING \"${PROJECT_VERSION_MAJOR}"
    ".${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}\" \n"
    "#define VERSION_MAJOR ${PROJECT_VERSION_MAJOR}\n"
    "#define VERSION_MINOR ${PROJECT_VERSION_MINOR}\n"
    "#define VERSION_PATCH ${PROJECT_VERSION_PATCH}\n\n"
    "#endif // FUERTE_FUERTE_VERSION_H\n")

  file(RENAME "${TmpFile}" "${HeaderFile}")

  add_subdirectory(src)
  add_subdirectory(include)
  add_subdirectory(test)
  add_subdirectory(Examples)
